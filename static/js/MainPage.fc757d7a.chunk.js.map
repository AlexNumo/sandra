{"version":3,"file":"static/js/MainPage.fc757d7a.chunk.js","mappings":"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","sources":["Components/BTN/BTN.styled.jsx","Components/BTN/BTN.jsx","Components/CloseBtn/CloseBtn.styled.jsx","Components/CloseBtn/CloseBtn.jsx","Components/MainPage/MainPage.styled.jsx","Components/MainPage/MainPage.jsx","Components/RegistrationForm/RegistrationForm.styled.jsx","Components/RegistrationForm/RegistrationForm.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nconst ButtonStyle = styled.button`\n    font-family: 'Times New Roman', Times, serif;\n    font-size: 16px;\n    font-weight: 700;\n    border-radius: 22px;\n    background-color: #2b3b3b;\n    color: white;\n    width: 125px;\n`;\n\nexport { ButtonStyle };","import { ButtonStyle } from './BTN.styled';\n\nconst BTN = ({\n    handleChange,\n    TextBTN,\n    type,\n    disabled,\n    autofocus\n}) => {\n    return (\n        <ButtonStyle\n            onClick={handleChange}\n            type={type}\n            disabled={disabled}\n            autoFocus={autofocus}\n        >\n            {TextBTN}\n        </ButtonStyle>\n    )\n};\n\nexport default BTN;","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  height:35px;\n  width: 35px;\n  border: none;\n  padding: 10px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n  }\n`;\n","import { Btn } from './CloseBtn.styled';\n\nconst CloseBtn = ({ onHandleClick }) => {\n  return (\n    <Btn onClick={() => onHandleClick()}>\n      <svg viewBox=\"0 0 30 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M 7 4 C 6.744125 4 6.4879687 4.0974687 6.2929688 4.2929688 L 4.2929688 6.2929688 C 3.9019687 6.6839688 3.9019687 7.3170313 4.2929688 7.7070312 L 11.585938 15 L 4.2929688 22.292969 C 3.9019687 22.683969 3.9019687 23.317031 4.2929688 23.707031 L 6.2929688 25.707031 C 6.6839688 26.098031 7.3170313 26.098031 7.7070312 25.707031 L 15 18.414062 L 22.292969 25.707031 C 22.682969 26.098031 23.317031 26.098031 23.707031 25.707031 L 25.707031 23.707031 C 26.098031 23.316031 26.098031 22.682969 25.707031 22.292969 L 18.414062 15 L 25.707031 7.7070312 C 26.098031 7.3170312 26.098031 6.6829688 25.707031 6.2929688 L 23.707031 4.2929688 C 23.316031 3.9019687 22.682969 3.9019687 22.292969 4.2929688 L 15 11.585938 L 7.7070312 4.2929688 C 7.5115312 4.0974687 7.255875 4 7 4 z\" />\n      </svg>\n    </Btn>\n  );\n};\n\nexport default CloseBtn;\n","import styled from 'styled-components';\nimport BackImgKangoo from \"../../icons/picture/DE0A7082.jpg\";\nimport { NavLink } from \"react-router-dom\";\n\nconst MainPagePosition = styled.div`\n    width: 100vw;\n    height: 400px;\n    background-image: url('${BackImgKangoo}');\n    background-repeat: no-repeat;\n    background-position: top center;\n    background-size: cover;\n    margin-left: auto;\n    margin-right: auto;\n`;\n\nconst ServicePosition = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-top: 148px;\n`;\n\nconst SevriceText = styled.h2`\n    font-family: 'Times New Roman', Times, serif;\n    font-size: 45px;\n    font-weight: 700;\n    margin: 0px;\n    color: white;\n`;\n\nconst AbonnementLink = styled(NavLink)`\n    font-family: 'Times New Roman', Times, serif;\n    font-size: 18px;\n    font-weight: 400;\n    margin-top: 35px;\n    background-color: aqua;\n    border-radius: 22px;\n    color: black;\n    text-decoration: none;\n    border: 1px solid;\n`;\n\n\nexport {\n    MainPagePosition,\n    SevriceText,\n    ServicePosition,\n    AbonnementLink\n};","import Modal from \"Components/RegistrationForm/RegistrationForm\";\nimport { useState } from \"react\";\nimport BTN from 'Components/BTN/BTN';\nimport {\n    MainPagePosition,\n    SevriceText,\n    ServicePosition,\n    // AbonnementLink\n} from './MainPage.styled';\nimport { Link } from \"react-router-dom\";\n\nconst MainPage = () => {\n    const [open, setOpen] = useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    }\n    const handleClose = () => {\n            setOpen(false);\n        }\n\n    return (\n        <MainPagePosition>\n            <ServicePosition>\n            <SevriceText>ARS FIT studio</SevriceText>\n                <BTN type=\"button\" handleChange={handleOpen} TextBTN={'Записуйся'} />\n                <Link to='abonnements'>Абонементи</Link>\n            </ServicePosition>\n            {open ? <Modal handleClose={handleClose} /> : null}\n        </MainPagePosition>\n    )\n};\n\nexport default MainPage;","// import { Link } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport { FiEyeOff, FiEye } from 'react-icons/fi';\n\nexport const ModalStyle = styled.div`\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    top: 0;\n    left: 0;\n    background-color: #ec63cf8d;\n    width: 100%;\n    height: 100%;\n`;\n\nexport const ContainerRegistr = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  background-color: #6b6b81;\n  border-radius: 22px;\n`;\nexport const ContainerRegistrStyle = styled.div`\n  padding: 0px 20px 20px 20px;\n`;\nexport const CloseBtnPosition = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    padding-top: 15px;\n`;\nexport const TitleRegistr = styled.h2`\n  color: rgba(252, 132, 45, 1);\n  text-transform: uppercase;\n  font-style: normal;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1.21;\n  letter-spacing: 0.04em;\n  margin-top: 0;\n  text-align: center;\n`;\nexport const FormRegistr = styled.form``;\n\nexport const FormRegistrList = styled.ul`\n  margin: 20px 0;\n  list-style: none;\n  padding: 0;\n`;\nexport const FormRegistrItem = styled.li`\n  position: relative;\n  margin-bottom: 0;\n  &:not(:last-child) {\n    margin-bottom: 40px;\n  }\n`;\nexport const FormRegistrLabel = styled.label`\n  display: flex;\n  width: auto;\n  height: 16px;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.21;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n`;\n\nexport const FormRegistrInput = styled.input`\n  border: none;\n  border-bottom: 1px solid #e0e0e0;\n  height: 20px;\n  width: 100%;\n  outline: none;\n  background-color: white;\n  border-radius: 22px;\n  padding-left: 15px;\n  padding-bottom: 0px;\n  border: none;\n`;\n\nexport const Message = styled.div`\n  font-weight: 500;\n  font-size: 12px;\n  color: rgba(252, 132, 45, 1);\n`;\n\nexport const ButtonContainer = styled.div`\n  margin-top: 20px;\n  display: flex;\n  gap: 32px;\n`;\n\nconst plaseholderButtonStyles = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  max-width: 180px;\n  border-radius: 30px;\n  border-color: rgba(117, 190, 218, 0);\n  padding: 13px 25px;\n  background-color: #1bcaca;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    box-shadow: none;\n    background: transparent;\n  }\n`;\n\nexport const RegistrButton = styled.button`\n  ${plaseholderButtonStyles}\n`;\n\nexport const ShowPassword = styled(FiEye)`\n  color: #9b9faa;\n  font-size: 15px;\n  margin-bottom: auto;\n  margin-top: auto;\n`;\n\nexport const HidePassword = styled(FiEyeOff)`\n  color: #9b9faa;\n  font-size: 15px;\n  margin-bottom: auto;\n  margin-top: auto;\n`;\nexport const PasswordButton = styled.button`\n  width: 24px;\n  position: absolute;\n  right: 0px;\n  bottom: 0px;\n  border: none;\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport CloseBtn from '../CloseBtn/CloseBtn';\nimport { authOperations } from '../../redux/app/auth';\n\nimport {\n  ContainerRegistr,\n  TitleRegistr,\n  CloseBtnPosition,\n  FormRegistr,\n  FormRegistrList,\n  FormRegistrItem,\n  FormRegistrLabel,\n  FormRegistrInput,\n  Message,\n  ButtonContainer,\n  RegistrButton,\n  PasswordButton,\n  ShowPassword,\n  HidePassword,\n  ModalStyle,\n  ContainerRegistrStyle,\n} from './RegistrationForm.styled';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegistrationForm = ({handleClose}) => {\n  const [show, setShow] = useState(false);\n\n  const handleClick = () => setShow(!show);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const formik = useFormik({\n    initialValues,\n\n    validationSchema: Yup.object({\n      name: Yup.string()\n        .min(3, 'Мінімум 3 символи')\n        .max(254, 'Максимум 254 символів')\n        .matches(\n          /[A-z]/,\n          'Будь ласка, виберіть англійську розкладку клавіатури',\n        )\n        .required(\"Обов'язково\"),\n      email: Yup.string()\n        .email('Недійсна електронна пошта')\n\n        .max(254, 'Максимум 254 символів')\n\n        .matches(\n          /([a-z0-9_.-]{3,})@([A-z0-9_.-]{1,}).([A-z]{2,8})/,\n          'Електронна пошта має містити мінімум 3 символи',\n        )\n        .required(\"Обов'язково\"),\n      password: Yup.string()\n        .min(8, 'Мінімум 8 символів')\n        .max(100, 'Максимум 100 символів')\n        .matches(\n          /(?=.*[0-9])(?=.*[a-z])[0-9a-zA-Z]{8,}/,\n          'Пароль повинен складатися з латинських літер та цифр без спеціальних символів',\n        )\n        .required(\"Обов'язково\"),\n    }),\n\n    onSubmit: values => {\n      const { name, email, password } = values;\n      dispatch(authOperations.actionRegister({ name, email, password })).then(\n        ({ payload }) => {\n          if (payload?.code === 201) {\n            navigate('/', { replace: true });\n            handleClose();\n          }\n        },\n      );\n      formik.resetForm();\n    },\n  });\n\n    return (\n    <ModalStyle>\n            <ContainerRegistr>\n                <ContainerRegistrStyle>\n                    <CloseBtnPosition>\n                      <CloseBtn onHandleClick={handleClose} />\n                    </CloseBtnPosition>\n                    <TitleRegistr>Реєстрація</TitleRegistr>\n                    <FormRegistr onSubmit={formik.handleSubmit}>\n                        <FormRegistrList>\n                        <FormRegistrItem>\n                            <FormRegistrLabel htmlFor=\"name\">Ім'я *</FormRegistrLabel>\n                            <FormRegistrInput\n                            id=\"name\"\n                            name=\"name\"\n                            type=\"text\"\n                            // pattern=\"([A-z])\"\n                            onChange={formik.handleChange}\n                            value={formik.values.name}\n                            />\n                            {formik.touched.name && formik.errors.name ? (\n                            <Message>{formik.errors.name}</Message>\n                            ) : null}\n                        </FormRegistrItem>\n                        <FormRegistrItem>\n                            <FormRegistrLabel htmlFor=\"email\">\n                            Електронна пошта *\n                            </FormRegistrLabel>\n                            <FormRegistrInput\n                            id=\"email\"\n                            name=\"email\"\n                            type=\"text\"\n                            //pattern=\"([a-z0-9_.-]{1,})@([A-z0-9_.-]{1,}).([A-z]{2,8})\"\n                            //title=\"Електронна пошта повинна складатися з малих латинських літер, цифр і без спеціальних символів.\"\n                            onChange={formik.handleChange}\n                            value={formik.values.email}\n                            />\n                            {formik.touched.email && formik.errors.email ? (\n                            <Message>{formik.errors.email}</Message>\n                            ) : null}\n                        </FormRegistrItem>\n                        <FormRegistrItem>\n                            <FormRegistrLabel htmlFor=\"password\">Пароль *</FormRegistrLabel>\n                            <FormRegistrInput\n                            id=\"password\"\n                            name=\"password\"\n                            type={show ? 'text' : 'password'}\n                            // pattern=\"((?=.*[0-9])(?=.*[a-z])[0-9a-zA-Z]{8,})\"\n                            // title=\"Пароль повинен складатися з латинських літер та цифр без спеціальних символів\"\n                            onChange={formik.handleChange}\n                            value={formik.values.password}\n                            />\n                            <PasswordButton type=\"button\" onClick={handleClick}>\n                            {show ? <ShowPassword /> : <HidePassword />}\n                            </PasswordButton>\n                            {formik.touched.password && formik.errors.password ? (\n                            <Message>{formik.errors.password}</Message>\n                            ) : null}\n                        </FormRegistrItem>\n                        </FormRegistrList>\n                        <ButtonContainer>\n                        <RegistrButton type=\"submit\">Зареєструватися</RegistrButton>\n                        </ButtonContainer>\n                        </FormRegistr>\n            </ContainerRegistrStyle>\n        </ContainerRegistr>\n    </ModalStyle>\n  );\n};\nexport default RegistrationForm;\n"],"names":["ButtonStyle","styled","handleChange","TextBTN","type","disabled","autofocus","onClick","autoFocus","Btn","onHandleClick","viewBox","xmlns","d","MainPagePosition","BackImgKangoo","ServicePosition","SevriceText","NavLink","useState","open","setOpen","BTN","to","handleClose","ModalStyle","ContainerRegistr","ContainerRegistrStyle","CloseBtnPosition","TitleRegistr","FormRegistr","FormRegistrList","FormRegistrItem","FormRegistrLabel","FormRegistrInput","Message","ButtonContainer","plaseholderButtonStyles","css","RegistrButton","ShowPassword","FiEye","HidePassword","FiEyeOff","PasswordButton","initialValues","name","email","password","show","setShow","dispatch","useDispatch","navigate","useNavigate","formik","useFormik","validationSchema","Yup","min","max","matches","required","onSubmit","values","authOperations","then","payload","code","replace","resetForm","CloseBtn","handleSubmit","htmlFor","id","onChange","value","touched","errors"],"sourceRoot":""}