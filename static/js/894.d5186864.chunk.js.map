{"version":3,"file":"static/js/894.d5186864.chunk.js","mappings":"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","sources":["Components/BTN/BTN.styled.jsx","Components/BTN/BTN.jsx","Components/CloseBtn/CloseBtn.styled.jsx","Components/CloseBtn/CloseBtn.jsx","icons/menu.svg","Components/BurgerMenu/BurgerMenu.jsx","Components/AuthForm/AuthForm.styled.jsx","Components/AuthForm/AuthForm.jsx","Components/ChoiceModal/ChoiceModal.styled.jsx","Components/ChoiceModal/ChoiceModal.jsx","Components/ChoiceModal/index.js","Components/Header/Header.styled.jsx","Components/Header/Header.jsx","Components/RegistrationForm/RegistrationForm.styled.jsx","Components/RegistrationForm/RegistrationForm.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nconst ButtonStyle = styled.button`\n    font-family: 'Times New Roman', Times, serif;\n    font-size: 16px;\n    font-weight: 700;\n    border-radius: 22px;\n    background-color: #2b3b3b;\n    color: white;\n    width: 125px;\n`;\n\nexport { ButtonStyle };","import { ButtonStyle } from './BTN.styled';\n\nconst BTN = ({\n    handleChange,\n    TextBTN,\n    type,\n    disabled,\n    autofocus\n}) => {\n    return (\n        <ButtonStyle\n            onClick={handleChange}\n            type={type}\n            disabled={disabled}\n            autoFocus={autofocus}\n        >\n            {TextBTN}\n        </ButtonStyle>\n    )\n};\n\nexport default BTN;","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  height:35px;\n  width: 35px;\n  border: none;\n  padding: 10px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n  }\n`;\n","import { Btn } from './CloseBtn.styled';\n\nconst CloseBtn = ({ onHandleClick }) => {\n  return (\n    <Btn onClick={() => onHandleClick()}>\n      <svg viewBox=\"0 0 30 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M 7 4 C 6.744125 4 6.4879687 4.0974687 6.2929688 4.2929688 L 4.2929688 6.2929688 C 3.9019687 6.6839688 3.9019687 7.3170313 4.2929688 7.7070312 L 11.585938 15 L 4.2929688 22.292969 C 3.9019687 22.683969 3.9019687 23.317031 4.2929688 23.707031 L 6.2929688 25.707031 C 6.6839688 26.098031 7.3170313 26.098031 7.7070312 25.707031 L 15 18.414062 L 22.292969 25.707031 C 22.682969 26.098031 23.317031 26.098031 23.707031 25.707031 L 25.707031 23.707031 C 26.098031 23.316031 26.098031 22.682969 25.707031 22.292969 L 18.414062 15 L 25.707031 7.7070312 C 26.098031 7.3170312 26.098031 6.6829688 25.707031 6.2929688 L 23.707031 4.2929688 C 23.316031 3.9019687 22.682969 3.9019687 22.292969 4.2929688 L 15 11.585938 L 7.7070312 4.2929688 C 7.5115312 4.0974687 7.255875 4 7 4 z\" />\n      </svg>\n    </Btn>\n  );\n};\n\nexport default CloseBtn;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMenu(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"menu\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2 6h28v6h-28zM2 14h28v6h-28zM2 22h28v6h-28z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMenu);\nexport default __webpack_public_path__ + \"static/media/menu.22926747132daf8f955df3c257085e8f.svg\";\nexport { ForwardRef as ReactComponent };","import { slide as Menu } from 'react-burger-menu';\nimport BurgerIcon from '../../icons/menu.svg';\n\nconst BurgerMenu = () => {\n    return (\n        <Menu\n            right\n            width='100vh'\n            customBurgerIcon={ <img src={BurgerIcon} alt=\"BurgerIcon\"/> } \n        >\n                <a id=\"home\" className=\"menu-item\" href=\"/\">Home</a>\n                <a id=\"about\" className=\"menu-item\" href=\"/about\">About</a>\n                <a id=\"contact\" className=\"menu-item\" href=\"/contact\">Contact</a>\n            </Menu>\n    )\n}\n\nexport default BurgerMenu;","// import styled from 'styled-components';\n\n// const ModalStyle = styled.div`\n//     position: absolute;\n//     display: flex;\n//     align-items: center;\n//     justify-content: center;\n//     top: 0;\n//     left: 0;\n//     background-color: #ec63cf8d;\n//     width: 100%;\n//     height: 100%;\n// `;\n\n// const ModalFeedBack = styled.div`\n//     display: flex;\n//     flex-direction: column;\n//     width: 250px;\n//     background-color: #53be7c;\n// `;\n\n// const CloseBtnPosition = styled.div`\n//     display: flex;\n//     justify-content: flex-end;\n// `;\n\n// const CloseBtn = styled.button`\n//     background: none;\n//     border: none;\n//     width: auto;\n//     margin-top: 5px;\n//     margin-right: 5px;\n// `;\n\n// const CloseImg = styled.img`\n//     width: 18px;\n// `;\n\n// const ModalPosition = styled.form`\n//     margin: 5px;\n// `;\n\n// const NumberTel = styled.label`\n//     font-family: 'Times New Roman', Times, serif;\n//     font-size: 18px;\n//     font-weight: 400;\n//     margin: 0px;\n// `;\n\n// const PositionInput = styled.input`\n//     width: 100%;\n//     height: 25px;\n//     margin-top: 10px;\n//     margin-bottom: 10px;\n// `;\n\n// export {\n//     ModalStyle,\n//     ModalPosition,\n//     ModalFeedBack,\n//     CloseBtnPosition,\n//     CloseBtn,\n//     CloseImg,\n//     NumberTel,\n//     PositionInput,\n// };\n\n// import { Link } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport { FiEyeOff, FiEye } from 'react-icons/fi';\n\nexport const ModalStyle = styled.div`\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    top: 0;\n    left: 0;\n    background-color: #ec63cf8d;\n    width: 100%;\n    height: 100%;\n`;\n\nexport const ContainerRegistr = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  background-color: #6b6b81;\n  border-radius: 22px;\n`;\nexport const ContainerRegistrStyle = styled.div`\n  padding: 0px 20px 20px 20px;\n`;\nexport const CloseBtnPosition = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    padding-top: 15px;\n`;\nexport const CloseBtn = styled.button`\n    background: none;\n    border: none;\n    width: auto;\n    margin-top: 5px;\n    margin-right: 5px;\n`;\nexport const CloseImg = styled.img`\n    width: 18px;\n`;\nexport const TitleRegistr = styled.h2`\n  color: rgba(252, 132, 45, 1);\n  text-transform: uppercase;\n  font-style: normal;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1.21;\n  letter-spacing: 0.04em;\n  margin-top: 0;\n  text-align: center;\n`;\nexport const FormRegistr = styled.form``;\n\nexport const FormRegistrList = styled.ul`\n  margin: 20px 0;\n  list-style: none;\n  padding: 0;\n`;\nexport const FormRegistrItem = styled.li`\n  position: relative;\n  margin-bottom: 0;\n  &:not(:last-child) {\n    margin-bottom: 40px;\n  }\n`;\nexport const FormRegistrLabel = styled.label`\n  display: flex;\n  width: auto;\n  height: 16px;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.21;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n`;\n\nexport const FormRegistrInput = styled.input`\n  border: none;\n  border-bottom: 1px solid #e0e0e0;\n  height: 20px;\n  width: 100%;\n  outline: none;\n  background-color: white;\n  border-radius: 22px;\n  padding-left: 15px;\n  padding-bottom: 0px;\n  border: none;\n`;\n\nexport const Message = styled.div`\n  font-weight: 500;\n  font-size: 12px;\n  color: rgba(252, 132, 45, 1);\n`;\n\nexport const ButtonContainer = styled.div`\n  margin-top: 20px;\n  display: flex;\n  gap: 32px;\n`;\n\nconst plaseholderButtonStyles = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  max-width: 180px;\n  border-radius: 30px;\n  border-color: rgba(117, 190, 218, 0);\n  padding: 13px 25px;\n  background-color: #1bcaca;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    box-shadow: none;\n    background: transparent;\n  }\n`;\n\nexport const RegistrButton = styled.button`\n  ${plaseholderButtonStyles}\n`;\n\nexport const ShowPassword = styled(FiEye)`\n  color: #9b9faa;\n  font-size: 15px;\n  margin-bottom: auto;\n  margin-top: auto;\n`;\n\nexport const HidePassword = styled(FiEyeOff)`\n  color: #9b9faa;\n  font-size: 15px;\n  margin-bottom: auto;\n  margin-top: auto;\n`;\nexport const PasswordButton = styled.button`\n  width: 24px;\n  position: absolute;\n  right: 0px;\n  bottom: 0px;\n  border: none;\n`;\n","// import { useState } from 'react';\n// import Close from '../../icons/Close.svg';\n// import { clientAPI } from '../../service/axios.config';\n// import BTN from 'Components/BTN/BTN';\n// import {\n//     ModalStyle,\n//     ModalPosition,\n//     ModalFeedBack,\n//     CloseBtnPosition,\n//     CloseBtn,\n//     CloseImg,\n//     NumberTel,\n//     PositionInput,\n// } from './AuthForm.styled';\n\n// const Modal = ({ handleClose }) => {\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n\n//     const fetchAPISend = (e) => {\n//         e.preventDefault();\n//         const fetch = clientAPI.login({\n//             email,\n//             password\n//         });\n//         return (fetch);\n//     }\n      \n//     return(\n//         <ModalStyle>\n//             <ModalFeedBack>\n//                 <CloseBtnPosition>\n//                     <CloseBtn onClick={handleClose}>\n//                         <CloseImg src={Close} alt=\"Close\"/>\n//                     </CloseBtn>\n//                 </CloseBtnPosition>\n//                 <ModalPosition>\n//                     <NumberTel htmlfor='email'>Пошта:</NumberTel>\n//                     <PositionInput\n//                         name='email'\n//                         type='email'\n//                         placeholder='sandrochkastrong@gmail.com'\n//                         pattern='([A-z0-9_.-]{1,})@([A-z0-9_.-]{1,}).([A-z]{2,8})'\n//                         minlength='4'\n//                         value={email}\n//                         onChange={(event) => setEmail(event.target.value)}\n//                     />\n//                     <NumberTel htmlfor='password'>Пароль:</NumberTel>\n//                     <PositionInput\n//                         name='password'\n//                         type='text'\n//                         maxLength=\"15\"\n//                         placeholder='******'\n//                         value={password}\n//                         onChange={(event) => setPassword(event.target.value)}\n//                     />\n//                     <BTN type=\"button\" handleChange={fetchAPISend} TextBTN={'Відправити'} />\n//                 </ModalPosition>\n//             </ModalFeedBack>\n//         </ModalStyle>\n//     )\n// };\n\n// export default Modal;\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport CloseBtn from '../CloseBtn/CloseBtn';\nimport { authOperations } from '../../redux/app/auth';\n\nimport {\n  ContainerRegistr,\n  TitleRegistr,\n  CloseBtnPosition,\n  FormRegistr,\n  FormRegistrList,\n  FormRegistrItem,\n  FormRegistrLabel,\n  FormRegistrInput,\n  Message,\n  ButtonContainer,\n  RegistrButton,\n  PasswordButton,\n  ShowPassword,\n  HidePassword,\n  ModalStyle,\n  ContainerRegistrStyle,\n} from './AuthForm.styled';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst AuthForm = ({handleClose}) => {\n  const [show, setShow] = useState(false);\n\n  const handleClick = () => setShow(!show);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const formik = useFormik({\n    initialValues,\n\n    validationSchema: Yup.object({\n      email: Yup.string()\n        .email('Недійсна електронна пошта')\n\n        .max(254, 'Максимум 254 символів')\n\n        .matches(\n          /([a-z0-9_.-]{3,})@([A-z0-9_.-]{1,}).([A-z]{2,8})/,\n          'Електронна пошта має містити мінімум 3 символи',\n        )\n        .required(\"Обов'язково\"),\n      password: Yup.string()\n        .min(8, 'Мінімум 8 символів')\n        .max(100, 'Максимум 100 символів')\n        .matches(\n          /(?=.*[0-9])(?=.*[a-z])[0-9a-zA-Z]{8,}/,\n          'Пароль повинен складатися з латинських літер та цифр без спеціальних символів',\n        )\n        .required(\"Обов'язково\"),\n    }),\n\n    onSubmit: values => {\n      const { email, password } = values;\n      dispatch(authOperations.actionLogin({ email, password })).then(\n        ({ payload }) => {\n          if (payload !== undefined) {\n            navigate('/', { replace: true });\n            handleClose();\n          }\n        },\n      )\n    },\n  });\n    return (\n    <ModalStyle>\n          <ContainerRegistr>\n              <ContainerRegistrStyle>\n                  <CloseBtnPosition>\n                    <CloseBtn onHandleClick={handleClose} />\n                  </CloseBtnPosition>\n                  <TitleRegistr>Авторизація</TitleRegistr>\n                  <FormRegistr onSubmit={formik.handleSubmit}>\n                      <FormRegistrList>\n                      <FormRegistrItem>\n                          <FormRegistrLabel htmlFor=\"email\">\n                          Електронна пошта *\n                          </FormRegistrLabel>\n                          <FormRegistrInput\n                          id=\"email\"\n                          name=\"email\"\n                          type=\"text\"\n                          onChange={formik.handleChange}\n                          value={formik.values.email}\n                          />\n                          {formik.touched.email && formik.errors.email ? (\n                          <Message>{formik.errors.email}</Message>\n                          ) : null}\n                      </FormRegistrItem>\n                      <FormRegistrItem>\n                          <FormRegistrLabel htmlFor=\"password\">Пароль *</FormRegistrLabel>\n                          <FormRegistrInput\n                          id=\"password\"\n                          name=\"password\"\n                          type={show ? 'text' : 'password'}\n                          onChange={formik.handleChange}\n                          value={formik.values.password}\n                          />\n                          <PasswordButton type=\"button\" onClick={handleClick}>\n                          {show ? <ShowPassword /> : <HidePassword />}\n                          </PasswordButton>\n                          {formik.touched.password && formik.errors.password ? (\n                          <Message>{formik.errors.password}</Message>\n                          ) : null}\n                      </FormRegistrItem>\n                      </FormRegistrList>\n                      <ButtonContainer>\n                      <RegistrButton type=\"submit\">Авторизуватися</RegistrButton>\n                      </ButtonContainer>\n                      </FormRegistr>\n          </ContainerRegistrStyle>\n      </ContainerRegistr>\n    </ModalStyle>\n  );\n};\nexport default AuthForm;\n","import styled from 'styled-components';\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nconst ModalDiv = styled.div`\n  position: relative;\n  background-color: white;\n  width: 672px;\n  padding: 64px 80px 80px;\n  padding-bottom: 80px;\n`;\n\nconst ContentWrap = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst BtnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  button:first-child {\n    margin-bottom: 40px;\n  }\n`;\n\nconst CloseModalBtn = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n`;\n\nconst ModalTtl = styled.h2`\n  font-size: 20px;\n  text-align: center;\n  line-height: 1.2;\n  margin-bottom: 20px;\n`;\n\nconst Text = styled.p`\n  width: 280px;\n  text-align: center;\n  font-weight: 700;\n  font-size: 16px;\n  margin-bottom: 40px;\n  line-height: 1.2;\n`;\n\nexport {\n  Overlay,\n  ModalDiv,\n  ModalTtl,\n  Text,\n  CloseModalBtn,\n  ContentWrap,\n  BtnWrapper,\n};\n","import { useEffect } from 'react';\nimport BTN from '../BTN/BTN';\nimport CloseBtn from '../CloseBtn/CloseBtn';\nimport {\n  Overlay,\n  ModalDiv,\n  ModalTtl,\n  Text,\n  CloseModalBtn,\n  ContentWrap,\n  BtnWrapper,\n} from './ChoiceModal.styled';\n\nfunction ChoiceModal({ text, choiceHandler, closeModalHandle, subText }) {\n  useEffect(() => {\n    window.addEventListener('keydown', escKeyHandle);\n    return () => {\n      window.removeEventListener('keydown', escKeyHandle);\n    };\n  });\n\n  const escKeyHandle = event => {\n    if (event.keyCode === 27) {\n      choiceHandler(false);\n      closeModalHandle();\n      document.body.style.overflow = 'visible';\n    }\n  };\n  const onClickOvrlHandle = event => {\n    if (event.target.id === 'modal-overlay') {\n      choiceHandler(false);\n      closeModalHandle();\n      document.body.style.overflow = 'visible';\n    }\n  };\n\n  const onOkClickHandle = () => {\n    choiceHandler(true);\n    closeModalHandle();\n    document.body.style.overflow = 'visible';\n  };\n\n  const onCancelClickHandle = () => {\n    choiceHandler(false);\n    closeModalHandle();\n    document.body.style.overflow = 'visible';\n  };\n\n  const closeModal = () => {\n    choiceHandler(false);\n    closeModalHandle();\n    document.body.style.overflow = 'visible';\n  };\n\n  return (\n    <Overlay id=\"modal-overlay\" onClick={onClickOvrlHandle}>\n      <ModalDiv>\n        <CloseModalBtn>\n          <CloseBtn onHandleClick={closeModal} />\n        </CloseModalBtn>\n        <ContentWrap>\n          <ModalTtl>Ви впевнені, {text}?</ModalTtl>\n          <Text>{subText}</Text>\n          <BtnWrapper>\n            <BTN\n              handleChange={onCancelClickHandle}\n              TextBTN=\"Скасувати\"\n              autofocus={true}\n            />\n            <BTN\n              handleChange={onOkClickHandle}\n              TextBTN=\"Підтвердити\"\n              autofocus={false}\n            />\n          </BtnWrapper>\n        </ContentWrap>\n      </ModalDiv>\n    </Overlay>\n  );\n}\n\nexport default ChoiceModal;\n","import ChoiceModal from './ChoiceModal';\n\nexport default ChoiceModal;\n","import styled from 'styled-components';\n\nconst HeaderPosition = styled.header`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 15px 15px 15px 15px;\n    background-color: #d4b1b1;\n`;\n\nconst HeartPosition = styled.div`\n    position: relative;\n    top: -8px;\n`;\n\nconst Heart = styled.div`\n    display: inline-block;\n    height: 20px;\n    width: 20px;\n    position: absolute;\n    left: 45%;\n    top: 45%;\n    background-color: red;\n    transform: rotate(-45deg);\n    animation: heartbeat 1s infinite;\n    ::before{\n        top: -12px;\n        left: 0;\n    }\n    ::after{\n        left: 12px;\n        top: 0;\n    }\n    ::before, ::after{\n        content: \"\";\n        position: absolute;\n        height: 20px;\n        width: 20px;\n        background-color: red;\n        border-radius: 50%;\n    }\n`;\n\nexport {\n    HeaderPosition,\n    HeartPosition,\n    Heart,\n};","import BurgerMenu from '../BurgerMenu/BurgerMenu';\nimport RegistrationForm from '../RegistrationForm/RegistrationForm';\nimport AuthForm from '../AuthForm/AuthForm';\nimport \"./style.css\";\nimport { useState } from 'react';\nimport BTN from 'Components/BTN/BTN';\nimport { authSelectors } from '../../redux/app/auth/auth-selectors';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { authOperations } from 'redux/app/auth';\nimport { useNavigate } from 'react-router-dom';\nimport ChoiceModal from '../ChoiceModal';\nimport {\n    HeaderPosition,\n    HeartPosition,\n    Heart\n} from './Header.styled';\n\nconst Header = () => {\n    const [openSignUp, setOpenSignUp] = useState(false);\n    const [openSignIn, setOpenSignIn] = useState(false);\n    const [isShowChoiceModal, setIsShowChoiceModal] = useState(false);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const handleLogout = () => {\n        setIsShowChoiceModal(true);\n        document.body.style.overflow = 'hidden';\n    };\n    const closeModalHandle = () => {\n        setIsShowChoiceModal(false);\n    };\n\n    const choiceHandler = answer => {\n    if (answer) {\n      dispatch(authOperations.actionLogout()).then(() => {\n        navigate('/', { replace: true });\n      });\n    }\n    };\n    const userName = useSelector(authSelectors.getUserName);\n    console.log(\"userName: \", userName);\n    const NotLog = () => {\n        return (\n            <>\n                <BTN type=\"button\" handleChange={handleOpenSignUp} TextBTN={'Реєстрація'} />\n                <BTN type=\"button\" handleChange={handleOpenSignIn} TextBTN={'Авторизація'} />\n            </>\n        )\n    }\n\n        const IsLog = () => {\n        return (\n            <>\n                <BTN type=\"button\" TextBTN={`${userName}`} />\n                <BTN type=\"button\" handleChange={handleLogout} TextBTN={'Вихід'} />\n                {isShowChoiceModal && (\n                        <ChoiceModal\n                        text={'що хочете вийти зі свого облікового запису'}\n                        choiceHandler={choiceHandler}\n                        closeModalHandle={closeModalHandle}\n                        />\n      )}\n            </>\n        )\n    } ;\n    const handleOpenSignUp = () => {\n        setOpenSignUp(true);\n    }\n    const handleCloseSignUp = () => {\n        setOpenSignUp(false);\n    }\n    const handleOpenSignIn = () => {\n        setOpenSignIn(true);\n    }\n    const handleCloseSignIn = () => {\n        setOpenSignIn(false);\n    }\n    return (\n        <HeaderPosition>\n            <h2>Кайфуй від себе</h2>\n            <HeartPosition>\n                <Heart></Heart>\n            </HeartPosition>   \n            \n            {userName ? <IsLog /> : <NotLog />}\n            <div id=\"Menu\">\n                <BurgerMenu pageWrapId={\"page-wrap\"} outerContainerId={\"Menu\"} />\n                <div id=\"page-wrap\">\n                </div>\n            </div>\n            {openSignUp ? <RegistrationForm handleClose={handleCloseSignUp} /> : null}\n            {openSignIn ? <AuthForm handleClose={handleCloseSignIn} /> : null}\n\n        </HeaderPosition>\n    )\n}\n\nexport default Header;","// import { Link } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport { FiEyeOff, FiEye } from 'react-icons/fi';\n\nexport const ModalStyle = styled.div`\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    top: 0;\n    left: 0;\n    background-color: #ec63cf8d;\n    width: 100%;\n    height: 100%;\n`;\n\nexport const ContainerRegistr = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  background-color: #6b6b81;\n  border-radius: 22px;\n`;\nexport const ContainerRegistrStyle = styled.div`\n  padding: 0px 20px 20px 20px;\n`;\nexport const CloseBtnPosition = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    padding-top: 15px;\n`;\nexport const TitleRegistr = styled.h2`\n  color: rgba(252, 132, 45, 1);\n  text-transform: uppercase;\n  font-style: normal;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1.21;\n  letter-spacing: 0.04em;\n  margin-top: 0;\n  text-align: center;\n`;\nexport const FormRegistr = styled.form``;\n\nexport const FormRegistrList = styled.ul`\n  margin: 20px 0;\n  list-style: none;\n  padding: 0;\n`;\nexport const FormRegistrItem = styled.li`\n  position: relative;\n  margin-bottom: 0;\n  &:not(:last-child) {\n    margin-bottom: 40px;\n  }\n`;\nexport const FormRegistrLabel = styled.label`\n  display: flex;\n  width: auto;\n  height: 16px;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.21;\n  letter-spacing: 0.04em;\n  color: #9b9faa;\n`;\n\nexport const FormRegistrInput = styled.input`\n  border: none;\n  border-bottom: 1px solid #e0e0e0;\n  height: 20px;\n  width: 100%;\n  outline: none;\n  background-color: white;\n  border-radius: 22px;\n  padding-left: 15px;\n  padding-bottom: 0px;\n  border: none;\n`;\n\nexport const Message = styled.div`\n  font-weight: 500;\n  font-size: 12px;\n  color: rgba(252, 132, 45, 1);\n`;\n\nexport const ButtonContainer = styled.div`\n  margin-top: 20px;\n  display: flex;\n  gap: 32px;\n`;\n\nconst plaseholderButtonStyles = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  max-width: 180px;\n  border-radius: 30px;\n  border-color: rgba(117, 190, 218, 0);\n  padding: 13px 25px;\n  background-color: #1bcaca;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    box-shadow: none;\n    background: transparent;\n  }\n`;\n\nexport const RegistrButton = styled.button`\n  ${plaseholderButtonStyles}\n`;\n\nexport const ShowPassword = styled(FiEye)`\n  color: #9b9faa;\n  font-size: 15px;\n  margin-bottom: auto;\n  margin-top: auto;\n`;\n\nexport const HidePassword = styled(FiEyeOff)`\n  color: #9b9faa;\n  font-size: 15px;\n  margin-bottom: auto;\n  margin-top: auto;\n`;\nexport const PasswordButton = styled.button`\n  width: 24px;\n  position: absolute;\n  right: 0px;\n  bottom: 0px;\n  border: none;\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport CloseBtn from '../CloseBtn/CloseBtn';\nimport { authOperations } from '../../redux/app/auth';\n\nimport {\n  ContainerRegistr,\n  TitleRegistr,\n  CloseBtnPosition,\n  FormRegistr,\n  FormRegistrList,\n  FormRegistrItem,\n  FormRegistrLabel,\n  FormRegistrInput,\n  Message,\n  ButtonContainer,\n  RegistrButton,\n  PasswordButton,\n  ShowPassword,\n  HidePassword,\n  ModalStyle,\n  ContainerRegistrStyle,\n} from './RegistrationForm.styled';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegistrationForm = ({handleClose}) => {\n  const [show, setShow] = useState(false);\n\n  const handleClick = () => setShow(!show);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const formik = useFormik({\n    initialValues,\n\n    validationSchema: Yup.object({\n      name: Yup.string()\n        .min(3, 'Мінімум 3 символи')\n        .max(254, 'Максимум 254 символів')\n        .matches(\n          /[A-z]/,\n          'Будь ласка, виберіть англійську розкладку клавіатури',\n        )\n        .required(\"Обов'язково\"),\n      email: Yup.string()\n        .email('Недійсна електронна пошта')\n\n        .max(254, 'Максимум 254 символів')\n\n        .matches(\n          /([a-z0-9_.-]{3,})@([A-z0-9_.-]{1,}).([A-z]{2,8})/,\n          'Електронна пошта має містити мінімум 3 символи',\n        )\n        .required(\"Обов'язково\"),\n      password: Yup.string()\n        .min(8, 'Мінімум 8 символів')\n        .max(100, 'Максимум 100 символів')\n        .matches(\n          /(?=.*[0-9])(?=.*[a-z])[0-9a-zA-Z]{8,}/,\n          'Пароль повинен складатися з латинських літер та цифр без спеціальних символів',\n        )\n        .required(\"Обов'язково\"),\n    }),\n\n    onSubmit: values => {\n      const { name, email, password } = values;\n      dispatch(authOperations.actionRegister({ name, email, password })).then(\n        ({ payload }) => {\n          if (payload?.code === 201) {\n            navigate('/', { replace: true });\n            handleClose();\n          }\n        },\n      );\n      formik.resetForm();\n    },\n  });\n\n    return (\n    <ModalStyle>\n            <ContainerRegistr>\n                <ContainerRegistrStyle>\n                    <CloseBtnPosition>\n                      <CloseBtn onHandleClick={handleClose} />\n                    </CloseBtnPosition>\n                    <TitleRegistr>Реєстрація</TitleRegistr>\n                    <FormRegistr onSubmit={formik.handleSubmit}>\n                        <FormRegistrList>\n                        <FormRegistrItem>\n                            <FormRegistrLabel htmlFor=\"name\">Ім'я *</FormRegistrLabel>\n                            <FormRegistrInput\n                            id=\"name\"\n                            name=\"name\"\n                            type=\"text\"\n                            // pattern=\"([A-z])\"\n                            onChange={formik.handleChange}\n                            value={formik.values.name}\n                            />\n                            {formik.touched.name && formik.errors.name ? (\n                            <Message>{formik.errors.name}</Message>\n                            ) : null}\n                        </FormRegistrItem>\n                        <FormRegistrItem>\n                            <FormRegistrLabel htmlFor=\"email\">\n                            Електронна пошта *\n                            </FormRegistrLabel>\n                            <FormRegistrInput\n                            id=\"email\"\n                            name=\"email\"\n                            type=\"text\"\n                            //pattern=\"([a-z0-9_.-]{1,})@([A-z0-9_.-]{1,}).([A-z]{2,8})\"\n                            //title=\"Електронна пошта повинна складатися з малих латинських літер, цифр і без спеціальних символів.\"\n                            onChange={formik.handleChange}\n                            value={formik.values.email}\n                            />\n                            {formik.touched.email && formik.errors.email ? (\n                            <Message>{formik.errors.email}</Message>\n                            ) : null}\n                        </FormRegistrItem>\n                        <FormRegistrItem>\n                            <FormRegistrLabel htmlFor=\"password\">Пароль *</FormRegistrLabel>\n                            <FormRegistrInput\n                            id=\"password\"\n                            name=\"password\"\n                            type={show ? 'text' : 'password'}\n                            // pattern=\"((?=.*[0-9])(?=.*[a-z])[0-9a-zA-Z]{8,})\"\n                            // title=\"Пароль повинен складатися з латинських літер та цифр без спеціальних символів\"\n                            onChange={formik.handleChange}\n                            value={formik.values.password}\n                            />\n                            <PasswordButton type=\"button\" onClick={handleClick}>\n                            {show ? <ShowPassword /> : <HidePassword />}\n                            </PasswordButton>\n                            {formik.touched.password && formik.errors.password ? (\n                            <Message>{formik.errors.password}</Message>\n                            ) : null}\n                        </FormRegistrItem>\n                        </FormRegistrList>\n                        <ButtonContainer>\n                        <RegistrButton type=\"submit\">Зареєструватися</RegistrButton>\n                        </ButtonContainer>\n                        </FormRegistr>\n            </ContainerRegistrStyle>\n        </ContainerRegistr>\n    </ModalStyle>\n  );\n};\nexport default RegistrationForm;\n"],"names":["ButtonStyle","styled","handleChange","TextBTN","type","disabled","autofocus","onClick","autoFocus","Btn","onHandleClick","viewBox","xmlns","d","right","width","customBurgerIcon","src","BurgerIcon","alt","id","className","href","ModalStyle","ContainerRegistr","ContainerRegistrStyle","CloseBtnPosition","TitleRegistr","FormRegistr","FormRegistrList","FormRegistrItem","FormRegistrLabel","FormRegistrInput","Message","ButtonContainer","plaseholderButtonStyles","css","RegistrButton","ShowPassword","FiEye","HidePassword","FiEyeOff","PasswordButton","initialValues","name","email","password","handleClose","useState","show","setShow","dispatch","useDispatch","navigate","useNavigate","formik","useFormik","validationSchema","Yup","max","matches","required","min","onSubmit","values","authOperations","then","undefined","payload","replace","CloseBtn","handleSubmit","htmlFor","onChange","value","touched","errors","Overlay","ModalDiv","ContentWrap","BtnWrapper","CloseModalBtn","ModalTtl","Text","text","choiceHandler","closeModalHandle","subText","useEffect","window","addEventListener","escKeyHandle","removeEventListener","event","keyCode","document","body","style","overflow","target","BTN","HeaderPosition","HeartPosition","Heart","openSignUp","setOpenSignUp","openSignIn","setOpenSignIn","isShowChoiceModal","setIsShowChoiceModal","handleLogout","answer","userName","useSelector","authSelectors","console","log","NotLog","handleOpenSignUp","handleOpenSignIn","IsLog","pageWrapId","outerContainerId","RegistrationForm","code","resetForm"],"sourceRoot":""}